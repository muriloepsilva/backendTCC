generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String
  password   String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  Product    Product[]

  @@map("category")
}

model Product {
  id          String    @id @default(uuid())
  name        String
  price       String
  description String
  banner      String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())
  categoryId  String?
  Category    Category? @relation(fields: [categoryId], references: [id])
  Cart        Cart[]
  item        Item[]

  @@map("products")
}

model Order {
  id         String    @id @default(uuid())
  status     Boolean   @default(false)
  name       String
  address    String
  cep        String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  item       Item[]

  @@map("orders")
}

model Item {
  id         String    @id @default(uuid())
  amount     Int
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  orderId    String?
  productId  String?
  Order      Order?    @relation(fields: [orderId], references: [id])
  Product    Product?  @relation(fields: [productId], references: [id])

  @@map("itens")
}

model Cart {
  id        String   @id @default(uuid())
  productId String?
  Product   Product? @relation(fields: [productId], references: [id])

  @@map("cart")
}
